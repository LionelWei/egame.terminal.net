buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
    }
}

/*
task taskJar(type: Jar, dependsOn: ['build']) { //, dependsOn: [unpackJars] , dependsOn: [taskBuild]

    baseName 'egame.terminal.lib.net_' + new Date().format('yyyyMMdd') + '_' + 'release'

    from 'build/intermediates/classes/release'
    destinationDir = file('build/libs/release')
    exclude('**//*
BuildConfig.class', '**//*
R.class')
//去掉R$开头的文件
    exclude { it.name.startsWith('R$'); }
    exclude { it.name.startsWith('Test'); }

}

task clearBuild(type: Delete) {
    delete 'build/intermediates/classes/release'
    delete 'build/libs/release'
}

//把JAR复制到目标目录
task release(type: Copy, dependsOn: [clearBuild, taskJar]) {
    from('build/libs/release') {
        include '*.jar'
    }
    into('target/release')

// clearBuild.execute();
}
*/

apply plugin: 'com.android.application'

repositories {
    flatDir {
        dirs 'libs'
    }
}

fileTree(dir: 'libs', include: '**/*.aar')
        .each { File file ->
    dependencies.add("compile", [name: file.name.lastIndexOf('.').with { it != -1 ? file.name[0..<it] : file.name }, ext: 'aar'])
}

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    useLibrary 'org.apache.http.legacy'

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    lintOptions {
        abortOnError false
    }

}
